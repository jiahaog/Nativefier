name: ci

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

jobs:
  build:
    strategy:
      matrix:
        node-version:
        # Align the top Node version here with: 1. linter conditions later below, 2. publish.yml.
        - 17.x
        # Bumping the minimum required Node version? You must bump:
        #   1. package.json -> engines.node
        #   2. package.json -> devDependencies.@types/node
        #   3. tsconfig.json -> {target, lib}
        #   4. .github/workflows/ci.yml -> node-version
        #
        # Here in ci.yml, we want to always run the oldest version we require in
        # package.json -> engines.node, to be sure Nativefier runs on this minimum
        - 12.x
        platform: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    # Will also (through `prepare` hook): 1. install ./app, and 2. build
    - run: npm ci --no-fund
    # Only run linter once, for faster CI. Align the versions of Node here with above and publish.yml.
    - if: matrix.platform == 'ubuntu-latest' && matrix.node-version == '17.x'
      run: npm run lint
    - run: npm test
  
  # Docker build image and push to DockerHub
  docker:
    needs: build

    env:
      IMAGE_ID: ${{ secrets.DOCKERHUB_USERNAME }}/nativefier
    
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --file Dockerfile --tag "$IMAGE_ID:latest"

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Tag and Push
        run: |
          # Tag docker image the commit SHA
          docker tag "$IMAGE_ID:latest" "$IMAGE_ID:${GITHUB_SHA::8}"
          
          # Push the images to the registry
          docker push "$IMAGE_ID:latest"
          docker push "$IMAGE_ID:${GITHUB_SHA::8}"
    
