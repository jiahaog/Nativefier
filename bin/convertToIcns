#!/bin/sh

### USAGE

# ./convertToIcns <input png> <outp icns>
# Example
# ./convertToIcns ~/sample.png ~/Desktop/converted.icns

# exit the shell script on error immediately

set -e

make_icns_sips() {
    local file output_file iconset output_icon
    file="${1}"
    output_file="${2}"
    iconset="$(mktemp -d)"
    output_icon="$(mktemp).icns"

    for size in {16,32,64,128,256,512}; do
        sips --setProperty format png --resampleHeightWidth "${size}" "${size}" "${file}" --out "${iconset}/icon_${size}x${size}.png" &> /dev/null
        sips --setProperty format png --resampleHeightWidth "$((size * 2))" "$((size * 2))" "${file}" --out "${iconset}/icon_${size}x${size}@2x.png" &> /dev/null
    done

    mv "${iconset}" "${iconset}.iconset"
    iconutil --convert icns "${iconset}.iconset" --output "${output_icon}"

    if [[ -z "${output_file}" ]]; then
        echo "${output_icon}" # so its path is returned when the function ends
    else
        mv "${output_icon}" "${output_file}"
    fi

    # clean up
    rm -rf "${iconset}"
}

make_icns_imagemagick() {
    local SOURCE DEST CONVERT_TO_PNG TEMP_DIR ICONSET
    SOURCE="${1}"
    DEST="${2}"
    # import script as variable
    CONVERT_TO_PNG="${BASH_SOURCE%/*}/convertToPng"
    TEMP_DIR="$(mktemp -d)"
    ICONSET="$(mktemp -d)"

    PNG_PATH="${TEMP_DIR}/icon.png"
    ${CONVERT_TO_PNG} "${SOURCE}" "${PNG_PATH}"

    # Resample image into iconset
    convert "${PNG_PATH}" -define png:big-depth=16 -define png:color-type=6 -sample 16x16 "${ICONSET}/icon_16x16.png"
    convert "${PNG_PATH}" -define png:big-depth=16 -define png:color-type=6 -sample 32x32 "${ICONSET}/icon_16x16@2x.png"
    convert "${PNG_PATH}" -define png:big-depth=16 -define png:color-type=6 -sample 32x32 "${ICONSET}/icon_32x32.png"
    convert "${PNG_PATH}" -define png:big-depth=16 -define png:color-type=6 -sample 64x64 "${ICONSET}/icon_32x32@2x.png"
    convert "${PNG_PATH}" -define png:big-depth=16 -define png:color-type=6 -sample 128x128 "${ICONSET}/icon_128x128.png"
    convert "${PNG_PATH}" -define png:big-depth=16 -define png:color-type=6 -sample 256x256 "${ICONSET}/icon_128x128@2x.png"
    convert "${PNG_PATH}" -define png:big-depth=16 -define png:color-type=6 -sample 256x256 "${ICONSET}/icon_256x256.png"
    convert "${PNG_PATH}" -define png:big-depth=16 -define png:color-type=6 -sample 512x512 "${ICONSET}/icon_256x256@2x.png"
    convert "${PNG_PATH}" -define png:big-depth=16 -define png:color-type=6 -sample 512x512 "${ICONSET}/icon_512x512.png"
    convert "${PNG_PATH}" -define png:big-depth=16 -define png:color-type=6 -sample 1024x1024 "${ICONSET}/icon_512x512@2x.png"

    # Create an icns file lefrom the iconset
    mv "${ICONSET}" "${ICONSET}.iconset" && ICONSET="${ICONSET}.iconset"
    iconutil -c icns "${ICONSET}" -o "${DEST}"

    # clean up
    rm -rf "${TEMP_DIR}" "${ICONSET}"
}


# Exec Paths
HAVE_IMAGEMAGICK=
HAVE_ICONUTIL=
HAVE_SIPS=

type convert &>/dev/null && HAVE_IMAGEMAGICK=true
type iconutil &>/dev/null && HAVE_ICONUTIL=true
type sips &>/dev/null && HAVE_SIPS=true

[[ -z "$HAVE_ICONUTIL" ]] && { echo >&2 "Cannot find required iconutil executable"; exit 1; }
[[ -z "$HAVE_IMAGEMAGICK" && -z "$HAVE_SIPS" ]] && { echo >&2 "Cannot find required image converter, please install sips or imagemagick"; exit 1; }

# Parameters
SOURCE="$1"
DEST="$2"

# Check source and destination arguments
if [ -z "${SOURCE}" ]; then
	echo "No source image specified"
	exit 1
fi

if [ -z "${DEST}" ]; then
	echo "No destination specified"
	exit 1
fi

HAVE_IMAGEMAGICK=
if [[ -n "$HAVE_IMAGEMAGICK" ]]; then
    make_icns_imagemagick "${SOURCE}" "${DEST}"
else
    make_icns_sips "${SOURCE}" "${DEST}"
fi


